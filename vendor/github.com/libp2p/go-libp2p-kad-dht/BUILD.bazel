load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "ctx_mutex.go",
        "dht.go",
        "dht_bootstrap.go",
        "dht_filters.go",
        "dht_net.go",
        "dht_options.go",
        "doc.go",
        "events.go",
        "handlers.go",
        "logging.go",
        "lookup.go",
        "protocol.go",
        "query.go",
        "records.go",
        "routing.go",
        "routing_options.go",
        "rt_diversity_filter.go",
        "subscriber_notifee.go",
    ],
    importmap = "k0s.io/vendor/github.com/libp2p/go-libp2p-kad-dht",
    importpath = "github.com/libp2p/go-libp2p-kad-dht",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/google/gopacket/routing:go_default_library",
        "//vendor/github.com/google/uuid:go_default_library",
        "//vendor/github.com/ipfs/go-cid:go_default_library",
        "//vendor/github.com/ipfs/go-datastore:go_default_library",
        "//vendor/github.com/ipfs/go-datastore/sync:go_default_library",
        "//vendor/github.com/ipfs/go-ipfs-util:go_default_library",
        "//vendor/github.com/ipfs/go-ipns:go_default_library",
        "//vendor/github.com/ipfs/go-log:go_default_library",
        "//vendor/github.com/jbenet/goprocess:go_default_library",
        "//vendor/github.com/jbenet/goprocess/context:go_default_library",
        "//vendor/github.com/libp2p/go-eventbus:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/crypto:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/event:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/host:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/network:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/peer:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/peerstore:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/protocol:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-core/routing:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kad-dht/metrics:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kad-dht/pb:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kad-dht/providers:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kad-dht/qpeerset:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kad-dht/rtrefresh:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kbucket:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-kbucket/peerdiversity:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-peerstore:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-record:go_default_library",
        "//vendor/github.com/libp2p/go-libp2p-record/pb:go_default_library",
        "//vendor/github.com/libp2p/go-msgio:go_default_library",
        "//vendor/github.com/libp2p/go-msgio/protoio:go_default_library",
        "//vendor/github.com/libp2p/go-netroute:go_default_library",
        "//vendor/github.com/multiformats/go-base32:go_default_library",
        "//vendor/github.com/multiformats/go-multiaddr:go_default_library",
        "//vendor/github.com/multiformats/go-multiaddr/net:go_default_library",
        "//vendor/github.com/multiformats/go-multibase:go_default_library",
        "//vendor/github.com/multiformats/go-multihash:go_default_library",
        "//vendor/go.opencensus.io/stats:go_default_library",
        "//vendor/go.opencensus.io/tag:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
    ],
)
